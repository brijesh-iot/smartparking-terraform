AWSTemplateFormatVersion: 2010-09-09
Description: Template to create RDS - MySQL database.
Parameters:
  CoreName:
    Description: Greengrass Core name to be created. A "Thing" with be created with _Core appended to the name.
    Type: String
    Default: smartparking
  DBInstanceID:
    Default: smartparking
    Description: MySQL database instance
    Type: String
    MinLength: '1'
    MaxLength: '63'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: >-
      Must begin with a letter and must not end with a hyphen or contain two
      consecutive hyphens.
  DBName:
    Default: smartparking
    Description: MySQL database
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: Must begin with a letter and contain only alphanumeric characters.
  DBInstanceClass:
    #Default: db.t2.micro
    Default: db.m4.large # with encrypted option
    Description: DB instance class
    Type: String
    ConstraintDescription: Must select a valid DB instance type.
  DBAllocatedStorage:
    Default: '20'
    Description: The size of the database (GiB)
    Type: Number
    MinValue: '5'
    MaxValue: '1024'
    ConstraintDescription: must be between 20 and 65536 GiB.
  DBUsername:
    NoEcho: 'true'
    Default: admin
    Description: Username for MySQL database access
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBPassword:
    NoEcho: 'true'
    Default: adminpass
    Description: Password MySQL database access
    Type: String
    MinLength: '8'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.

  StorageEncrypted:
    Type: String
    Default: "true"
    Description: Encrypted DB required?

  PubliclyAccessible:
    Type: String
    Default: "false"
    Description: DB is accessible publicly?

Resources:

  MySqlDBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Database Subnet Group
      DBSubnetGroupName: !Sub "${CoreName}-DBSubnetGrp"
      SubnetIds:
        - Fn::ImportValue:
            !Sub "${CoreName}-PrivateSubnet1"
        - Fn::ImportValue:
            !Sub "${CoreName}-PrivateSubnet2"

  MySqlDataBase:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      DBInstanceIdentifier: !Ref DBInstanceID
      DBName: !Ref DBName
      DBInstanceClass: !Ref DBInstanceClass
      AllocatedStorage: !Ref DBAllocatedStorage
      Engine: MySQL
      EngineVersion: 8.0.16
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      MonitoringInterval: '60'
      PubliclyAccessible: !Ref PubliclyAccessible
      StorageEncrypted: !Ref StorageEncrypted
      VPCSecurityGroups:
        - Fn::ImportValue:
            !Sub "${CoreName}-EdgeGatewaySecurityGroup"
        - Fn::ImportValue:
            !Sub "${CoreName}-GGSecurityGroup"
      DBSubnetGroupName: !Ref MySqlDBSubnetGroup
      MonitoringRoleArn:
        Fn::ImportValue:
          !Sub "${CoreName}-MySqlDdRoleArn"
      Tags:
        - Key: Name
          Value: !Sub "${CoreName}-MySqlDB"

Outputs:
  MySqlDBInstance:
    Description: MySQL Database instance name
    Value: !Ref MySqlDataBase
    Export:
      Name: !Sub "${CoreName}-MySqlDBInstance"

  MySqlDBInstanceEndpoint:
    Description: MySQL Database Endpoint
    Value: !GetAtt MySqlDataBase.Endpoint.Address
    Export:
      Name: !Sub "${CoreName}-MySqlDBInstanceEndpoint"

  MySqlDBInstanceUser:
    Description: MySQL Database Admin user
    Value: !Ref DBUsername
    Export:
      Name: !Sub "${CoreName}-MySqlDBInstanceDbAdmin"

  MySqlDBInstancePort:
    Description: MySQL Database Port
    Value: !GetAtt MySqlDataBase.Endpoint.Port
    Export:
      Name: !Sub "${CoreName}-MySqlDBInstancePort"

